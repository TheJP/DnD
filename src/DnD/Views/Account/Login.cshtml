@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Log in";
}

<section>
    <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="ui form summary">
        <h4 class="ui dividing header">Use a local account to log in.</h4>
        <div class="ui warning icon message validation-summary">
            <i class="warning circle icon"></i>
            <div class="content">
                <div class="header">Errors</div>
                <div asp-validation-summary="All" class="summary-content"></div>
            </div>
        </div>
        <div class="field">
            <label asp-for="Email"></label>
            <input asp-for="Email" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="field">
            <label asp-for="Password"></label>
            <input asp-for="Password" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
        <div class="field">
            <div class="ui checkbox">
                <label asp-for="RememberMe"></label>
                <input asp-for="RememberMe" tabindex="0" class="hidden" />
            </div>
        </div>
        <button type="submit" class="ui button"><i class="icon user"></i> Log in</button>

        <p><a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Register as a new user?</a></p>
        <p><a asp-action="ForgotPassword">Forgot your password?</a></p>
    </form>
</section>
<section style="display: none">
    <h4 class="ui dividing header">Use another service to log in.</h4>
    @{
        var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
        if (loginProviders.Count == 0)
        {
            <div>
                <p>
                    There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                    for details on setting up this ASP.NET application to support logging in via external services.
                </p>
            </div>
        }
        else
        {
            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                <div>
                    <p>
                        @foreach (var provider in loginProviders)
                        {
                            <button type="submit" class="ui button" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
                        }
                    </p>
                </div>
            </form>
        }
    }
</section>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
